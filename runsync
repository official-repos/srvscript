#!/bin/bash
RUN=0
DOW=$(date +%u)
# echo ${DOW}

# if [ -f "/usr/bin/wine" ]; then export WINEARCH=win32; fi
# Door knocking by icmp ping to 8.8.8.8
ping -c1 8.8.8.8 > /dev/null

if [ $DOW == 2 ]; then RUN=1; fi
if [ $DOW == 4 ]; then RUN=1; fi
if [ $DOW == 6 ]; then RUN=1; fi

# HAPUS
RUN=1

if [ $RUN == 0 ]
then
    echo "Exit"
    exit
fi

echo "Lanjut ..."

RUSER=userku
export RSYNC_PASSWORD=passwordku
RPORT=11873
HPORT=11080
RSERVER=nas1.pekanbaru.go.id
MYIP=`curl -s http://${RSERVER}:${HPORT}/getip.php`
echo $MYIP

# 1 - Jalankan mysql_backup (mysql_dump) => /backup/mysql
# 2 - rsync /backup/mysql
# 3 - rsync /var/www
# 4 - rsync /etc

# checkpoint #1
# exit

# 1 - Jalankan mysql_backup (mysql_dump) => /backup/mysql
# --------------------------------------------------------------------------

# Some variables - adjust them as needed
# BACKUP_DIR=/backup/`date "+%a"`/mysql
BACKUP_DIR=/backup/mysql
MYSQL_USER=root

# Do backups
logger "mysql_backup :: start ------------------"

# Check whether the directory already exists. If not, create it
if [ ! -d "$BACKUP_DIR" ]; then
    sudo mkdir -p $BACKUP_DIR
fi
sudo chmod o+w ${BACKUP_DIR}
cd $BACKUP_DIR

# Check if /backup/backuplist.txt exists
# Check for the file that gets created when the script successfully finishes.
INFILE=/backup/backuplist.txt
if ! [ -e ${INFILE} ]
then
    echo "/backup/mysql" | sudo tee ${INFILE}
    sudo chmod og+w ${INFILE}
    echo "/etc" >> ${INFILE}
    echo "/var/www" >> ${INFILE}
fi

logger "mysql_backup :: begin --------------------------------- "

# Get all databases
databases=`sudo mysql --defaults-file=/root/.my.cnf -u $MYSQL_USER -e "SHOW DATABASES;" | grep -Ev "(Database|information_schema|performance_schema|test)"`

# CHECK="sudo mysql -u $MYSQL_USER -e 'SHOW DATABASES;' | grep -Ev '(Database|information_schema|performance_schema|test)'"
# logger "Db => ${CHECK}"

# Perform Backup for each database
for db in $databases; do
    
    logger "Db => ${db}"
    
    # echo ${db}
    # # Backup DB
    FILENAME=$BACKUP_DIR/$db.sql.gz
    # logger ${FILENAME}
    # CHECK2="sudo mysqldump --defaults-file=/root/.my.cnf -u $MYSQL_USER -alv -h localhost $db | gzip > $FILENAME"
    # logger "${CHECK2}"
    
    sudo mysqldump --defaults-file=/root/.my.cnf -u $MYSQL_USER -alv -h localhost $db | gzip > $FILENAME
    
    # Adjust permissions
    # chmod og= $FILENAME
    
done

logger "mysql_backup :: end --------------------------------- "


ROPTS="-chavzP --stats"
RDST="rsync://${RUSER}@${RSERVER}:${RPORT}/${MYIP}/${DOW}"

# Iterate over each backup target
# --------------------------------------------------------------------------

cat ${INFILE} | while read line || [[ -n $line ]];
do
    # do something with $line here
    line=${line//[[:blank:]]/}
    if [ -n "${line}" ]; then
        # echo $line
        BCKDIR=$line
        # echo "rsync ${ROPTS} ${BCKDIR} ${RDST}"
        # Pls remember this script is executed by root, uid=0
        rsync ${ROPTS} ${BCKDIR} ${RDST}
    fi
done